name: move commits

on:
  workflow_dispatch:
    inputs:
      branch_name:
        type: string
        default: release
      minor:
        type: string

jobs:
  get_tags:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch_name }}
          token: ${{ secrets.MY_PAT }}
          fetch-depth: 0

      - name: list tags 
        run: |
          echo "second"

          echo '' > tags_and_shas2.json

          # Initialize page number
          page=1
          
          # Loop to fetch all pages

          echo "/repos/${{ github.repository }}/tags?per_page=100&page=$page"
          while true; do
            echo "Fetching page $page"
            
            gh api \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "/repos/${{ github.repository }}/tags?per_page=100&page=$page" --jq '.[] | { name: .name,sha: .commit.sha }' > tmp.txt

            echo tmp txt
            cat tmp.txt
            echo end of tmp
            ls -ltr

            if [ "[]" == "$(cat tmp.txt)" || "" == "$(cat tmp.txt)" ]; then
                  echo "BREAK"
                    break
            else
                    # The file is not-empty.
                    cat tmp.txt >> tags_and_shas2.json
            fi
              
            echo "/repos/${{ github.repository }}/tags?per_page=100&page=$page"
          
            # Increment the page number
            page=$((page + 1))
          done

          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/git/matching-refs/tags --jq '.[] | {tag: .ref, sha: .object.sha}' > tags_and_shas.json

          cat tags_and_shas.json
        env:
          GH_TOKEN: ${{ secrets.MY_PAT }}

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tags_and_shas
          path: tags_and_shas.json

      - name: upload artifact tags
        uses: actions/upload-artifact@v4
        with:
          name: tags
          path: tags.json

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tags_and_shas2
          path: tags_and_shas2.json

          
      - name: list tags and create release
        run: |
          echo 'CREATE RELEASES FROM TAGS'

          while IFS= read -r tag_sha; do
              echo "Processing: $tag_sha"  # Debugging: Print the raw JSON object
              tag=$(echo "$tag_sha" | jq -r '.name')
              sha=$(echo "$tag_sha" | jq -r '.sha')
              release_name=$(echo "$tag" | sed 's|refs/tags/||')
              if git branch --contains "$sha" | grep -q "release"; then
                  echo "$sha belongs to the release branch (tag: $tag)"
                  echo "$sha" >> release_commits.txt
                  # Create a release with the name matching the tag
                  echo "gh release create $tag --target $sha --title $release_name --notes Release for $release_name --latest false"
                  echo "gh release create $release_name --target $sha --title $release_name --notes Release for $release_name --latest false"
                  gh release create $release_name --target $sha --title $release_name
              else
                  echo "$sha does not belong to the release branch (tag: $tag)"
              fi
          done < tags_and_shas2.json

          echo '==============================================='
        env:
          GH_TOKEN: ${{ secrets.MY_PAT }}
          
