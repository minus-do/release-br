name: move commits

on:
  workflow_dispatch:
    inputs:
      branch_name:
        type: string
        default: release
      minor:
        type: string

jobs:
  get_tags:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch_name }}
          token: ${{ secrets.MY_PAT }}
          fetch-depth: 0

      - name: list all commits
        run: |
          git log --oneline | awk '{print $1}' > commits.txt

          cat commits.txt

          git branch

          echo START
          git config --global user.email "snsinahub@github.com"
          git config --global user.name "${{ github.actor }}"

          # Read the commit hashes from the file
          releaseMajor=1
          releaseMinor=${{ inputs.minor }}
          releasePatch=0
          release=$releaseMajor.$releaseMinor.$releasePatch
          touch reporel.txt
          ls -l
          while IFS= read -r commit; do
              echo RELEASE $release
              echo $commit
              # Check if the commit is part of the release branch
              git tag -a -f $release $commit -m "$release-$commit"
              
              releaseMinor=$((releaseMinor + 1))
              release=$releaseMajor.$releaseMinor.$releasePatch
              echo AFTER INCREMENT $release
              echo $release >> reporel.txt
          done < commits.txt
          
          git push origin --tags

          echo "add to release"
          ls -l
          
          cat reporel.txt
          
          echo read release file

          if [[ ! -f reporel.txt ]]; then
              echo "reporel.txt not found!"
              exit 1
          fi

          if [[ -f reporel.txt ]]; then
              echo "reporel.txt has been found!"
          fi
          
          # Read the contents of releases.txt and echo each line
          while IFS= read -r line; do
              echo "$line"
              # gh release create "$line" --title "$line" --latest false
              gh release create $line --latest=false 
          done < reporel.txt
          
        continue-on-error: true
        env:
          GH_TOKEN: ${{ secrets.MY_PAT }}

      - name: list all commits main
        run: |
          git checkout main
          git log --oneline -1 | awk '{print $1}'
          git log --oneline | awk '{print $1}'
        continue-on-error: true
          
